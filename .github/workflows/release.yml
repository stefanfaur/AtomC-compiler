name: ci

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - ubuntu-22.04
          - macos-12
        include:
          - os: windows-2022
            compiler: msvc
          - os: ubuntu-22.04 
            compiler: gcc
          - os: macos-12
            compiler: clang
    steps:
      - uses: actions/checkout@v3

      - name: Setup C Environment
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: false
          ninja: false
          vcpkg: false
          cppcheck: false
          clangtidy: false

      - name: Build Project
        run: make

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: acc-${{ matrix.os }}
          path: ${{ matrix.os == 'windows' && './acc.exe' || './acc' }}

      

  create-release: 
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifact

      - name: Upload Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/acc-windows-2022
          asset_name: acc-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/acc-ubuntu-22.04
          asset_name: acc-ubuntu
          asset_content_type: application/octet-stream

      - name: Upload Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/acc-macos-12
          asset_name: acc-macos
          asset_content_type: application/octet-stream

